name: Publish
run-name: Publishing Pushed Items of ${{ github.actor }} 

on:
  push:
    branches:
      - main

jobs:
  updating-files:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          persist-credentials: false

      - name: Collecting information from version.txt
        run: bash .github/scripts/getversion.sh

      - name: Writing CHANGELOG.md
        run: bash .github/scripts/changelog.sh

      - name: Updating Dockerfile
        run: bash .github/scripts/docker.sh

      - name: Committing changes
        run: |
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git add .
            git commit -m "Updated CHANGELOG.md and Dockerfile" && echo File Updated || echo File Skipped
        shell: bash

      - name: Releasing CHANGELOG.md and Dockerfile
        uses: ad-m/github-push-action@master
        with:
          force: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  auto-release:
    needs: updating-files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          persist-credentials: false

      - name: Collecting information from version.txt
        run: bash .github/scripts/getversion.sh

      - name: Releasing Version ${{ env.Version }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ env.Version }}-${{ env.VersionType }}
          prerelease: ${{ env.Prerelease }}
      
  docker-image:
    needs: auto-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          persist-credentials: false

      - name: Collecting information from version.txt
        run: bash .github/scripts/getversion.sh

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to docker Hub
        uses: docker/login-action@master
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Building & Publishing images
        uses: docker/build-push-action@master
        with:
          context: .
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8,linux/arm/v6
          push: true
          tags: ${{ secrets.DOCKER_USER }}/vigilantbot:latest,${{ secrets.DOCKER_USER }}/vigilantbot:${{ env.Version }}-${{ env.VersionType }}

  docker-test:
    needs: docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
        with:
          persist-credentials: false

      - name: Pulling images
        run: docker pull ${{ secrets.DOCKER_USER }}/vigilantbot:latest

      - name: Running docker image in interactive mode
        run: docker run --name vigilantbot -d -it -v "$PWD/.github/scripts/docker-test.sh:/app/docker-test.sh" -e "TG_BOT_TOKEN=${{ secrets.TG_TOKEN }}" -e "PORT=${{ secrets.WEB_PORT }}" ${{ secrets.DOCKER_USER }}/vigilantbot:latest /bin/sh
 
      - name: Running tests
        run: docker exec vigilantbot /bin/sh /app/docker-test.sh

      - name: Terminate container
        run: docker rm -f vigilantbot